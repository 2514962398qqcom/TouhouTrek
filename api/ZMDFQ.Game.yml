### YamlMime:ManagedReference
items:
- uid: ZMDFQ.Game
  commentId: T:ZMDFQ.Game
  id: Game
  parent: ZMDFQ
  children:
  - ZMDFQ.Game.ActivePlayer
  - ZMDFQ.Game.ActiveTheme
  - ZMDFQ.Game.Answer(ZMDFQ.PlayerAction.Response)
  - ZMDFQ.Game.createCards``1(``0,System.Int32,System.Int32)
  - ZMDFQ.Game.Deck
  - ZMDFQ.Game.EventDeck
  - ZMDFQ.Game.EventSystem
  - ZMDFQ.Game.Init(ZMDFQ.GameOptions)
  - ZMDFQ.Game.OnRequest
  - ZMDFQ.Game.Players
  - ZMDFQ.Game.RequestTime
  - ZMDFQ.Game.Round
  - ZMDFQ.Game.Size
  - ZMDFQ.Game.StartGame
  - ZMDFQ.Game.ThemeDeck
  - ZMDFQ.Game.TimeManager
  - ZMDFQ.Game.TurnTime
  - ZMDFQ.Game.UsedActionDeck
  - ZMDFQ.Game.UsedEventDeck
  - ZMDFQ.Game.UsedThemeDeck
  - ZMDFQ.Game.UsingCards
  - ZMDFQ.Game.UsingInfos
  - ZMDFQ.Game.WaitAnswer(ZMDFQ.PlayerAction.Request)
  - ZMDFQ.Game.winners
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: Game
  fullName: ZMDFQ.Game
  type: Class
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Game
    path: Assets/Scripts/Core/Game.cs
    startLine: 10
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public class Game
    content.vb: Public Class Game
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ZMDFQ.Game.EventSystem
  commentId: F:ZMDFQ.Game.EventSystem
  id: EventSystem
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: EventSystem
  nameWithType: Game.EventSystem
  fullName: ZMDFQ.Game.EventSystem
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: EventSystem
    path: Assets/Scripts/Core/Game.cs
    startLine: 12
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public EventSystem EventSystem
    return:
      type: ZMDFQ.EventSystem
    content.vb: Public EventSystem As EventSystem
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.TimeManager
  commentId: F:ZMDFQ.Game.TimeManager
  id: TimeManager
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: TimeManager
  nameWithType: Game.TimeManager
  fullName: ZMDFQ.Game.TimeManager
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: TimeManager
    path: Assets/Scripts/Core/Game.cs
    startLine: 14
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public ITimeManager TimeManager
    return:
      type: ZMDFQ.ITimeManager
    content.vb: Public TimeManager As ITimeManager
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.Size
  commentId: F:ZMDFQ.Game.Size
  id: Size
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Game.Size
  fullName: ZMDFQ.Game.Size
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Size
    path: Assets/Scripts/Core/Game.cs
    startLine: 18
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n当前社团规模\n"
  example: []
  syntax:
    content: public int Size
    return:
      type: System.Int32
    content.vb: Public Size As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.Players
  commentId: F:ZMDFQ.Game.Players
  id: Players
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: Game.Players
  fullName: ZMDFQ.Game.Players
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Players
    path: Assets/Scripts/Core/Game.cs
    startLine: 23
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n当前玩家\n"
  example: []
  syntax:
    content: public List<Player> Players
    return:
      type: System.Collections.Generic.List{ZMDFQ.Player}
    content.vb: Public Players As List(Of Player)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.UsingCards
  commentId: F:ZMDFQ.Game.UsingCards
  id: UsingCards
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: UsingCards
  nameWithType: Game.UsingCards
  fullName: ZMDFQ.Game.UsingCards
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: UsingCards
    path: Assets/Scripts/Core/Game.cs
    startLine: 28
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n正在结算中的卡\n"
  example: []
  syntax:
    content: public List<Card> UsingCards
    return:
      type: System.Collections.Generic.List{ZMDFQ.Card}
    content.vb: Public UsingCards As List(Of Card)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.UsingInfos
  commentId: F:ZMDFQ.Game.UsingInfos
  id: UsingInfos
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: UsingInfos
  nameWithType: Game.UsingInfos
  fullName: ZMDFQ.Game.UsingInfos
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: UsingInfos
    path: Assets/Scripts/Core/Game.cs
    startLine: 33
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n结算时出过什么卡\n"
  example: []
  syntax:
    content: public List<UsingInfo> UsingInfos
    return:
      type: System.Collections.Generic.List{ZMDFQ.UsingInfo}
    content.vb: Public UsingInfos As List(Of UsingInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.Deck
  commentId: F:ZMDFQ.Game.Deck
  id: Deck
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: Deck
  nameWithType: Game.Deck
  fullName: ZMDFQ.Game.Deck
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Deck
    path: Assets/Scripts/Core/Game.cs
    startLine: 37
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public List<ActionCard> Deck
    return:
      type: System.Collections.Generic.List{ZMDFQ.ActionCard}
    content.vb: Public Deck As List(Of ActionCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.UsedActionDeck
  commentId: F:ZMDFQ.Game.UsedActionDeck
  id: UsedActionDeck
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: UsedActionDeck
  nameWithType: Game.UsedActionDeck
  fullName: ZMDFQ.Game.UsedActionDeck
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: UsedActionDeck
    path: Assets/Scripts/Core/Game.cs
    startLine: 39
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public List<ActionCard> UsedActionDeck
    return:
      type: System.Collections.Generic.List{ZMDFQ.ActionCard}
    content.vb: Public UsedActionDeck As List(Of ActionCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.ThemeDeck
  commentId: F:ZMDFQ.Game.ThemeDeck
  id: ThemeDeck
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: ThemeDeck
  nameWithType: Game.ThemeDeck
  fullName: ZMDFQ.Game.ThemeDeck
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: ThemeDeck
    path: Assets/Scripts/Core/Game.cs
    startLine: 41
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public List<ThemeCard> ThemeDeck
    return:
      type: System.Collections.Generic.List{ZMDFQ.ThemeCard}
    content.vb: Public ThemeDeck As List(Of ThemeCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.UsedThemeDeck
  commentId: F:ZMDFQ.Game.UsedThemeDeck
  id: UsedThemeDeck
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: UsedThemeDeck
  nameWithType: Game.UsedThemeDeck
  fullName: ZMDFQ.Game.UsedThemeDeck
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: UsedThemeDeck
    path: Assets/Scripts/Core/Game.cs
    startLine: 43
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public List<ThemeCard> UsedThemeDeck
    return:
      type: System.Collections.Generic.List{ZMDFQ.ThemeCard}
    content.vb: Public UsedThemeDeck As List(Of ThemeCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.EventDeck
  commentId: F:ZMDFQ.Game.EventDeck
  id: EventDeck
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: EventDeck
  nameWithType: Game.EventDeck
  fullName: ZMDFQ.Game.EventDeck
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: EventDeck
    path: Assets/Scripts/Core/Game.cs
    startLine: 45
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public List<EventCard> EventDeck
    return:
      type: System.Collections.Generic.List{ZMDFQ.EventCard}
    content.vb: Public EventDeck As List(Of EventCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.UsedEventDeck
  commentId: F:ZMDFQ.Game.UsedEventDeck
  id: UsedEventDeck
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: UsedEventDeck
  nameWithType: Game.UsedEventDeck
  fullName: ZMDFQ.Game.UsedEventDeck
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: UsedEventDeck
    path: Assets/Scripts/Core/Game.cs
    startLine: 47
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public List<EventCard> UsedEventDeck
    return:
      type: System.Collections.Generic.List{ZMDFQ.EventCard}
    content.vb: Public UsedEventDeck As List(Of EventCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.ActiveTheme
  commentId: F:ZMDFQ.Game.ActiveTheme
  id: ActiveTheme
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: ActiveTheme
  nameWithType: Game.ActiveTheme
  fullName: ZMDFQ.Game.ActiveTheme
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: ActiveTheme
    path: Assets/Scripts/Core/Game.cs
    startLine: 49
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public ThemeCard ActiveTheme
    return:
      type: ZMDFQ.ThemeCard
    content.vb: Public ActiveTheme As ThemeCard
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.ActivePlayer
  commentId: F:ZMDFQ.Game.ActivePlayer
  id: ActivePlayer
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: ActivePlayer
  nameWithType: Game.ActivePlayer
  fullName: ZMDFQ.Game.ActivePlayer
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: ActivePlayer
    path: Assets/Scripts/Core/Game.cs
    startLine: 54
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n当前回合的玩家\n"
  example: []
  syntax:
    content: public Player ActivePlayer
    return:
      type: ZMDFQ.Player
    content.vb: Public ActivePlayer As Player
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.Round
  commentId: F:ZMDFQ.Game.Round
  id: Round
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: Round
  nameWithType: Game.Round
  fullName: ZMDFQ.Game.Round
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Round
    path: Assets/Scripts/Core/Game.cs
    startLine: 59
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n当前处于第几轮\n"
  example: []
  syntax:
    content: public int Round
    return:
      type: System.Int32
    content.vb: Public Round As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.TurnTime
  commentId: F:ZMDFQ.Game.TurnTime
  id: TurnTime
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: TurnTime
  nameWithType: Game.TurnTime
  fullName: ZMDFQ.Game.TurnTime
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: TurnTime
    path: Assets/Scripts/Core/Game.cs
    startLine: 64
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n出牌阶段可用时间\n"
  example: []
  syntax:
    content: public float TurnTime
    return:
      type: System.Single
    content.vb: Public TurnTime As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.RequestTime
  commentId: F:ZMDFQ.Game.RequestTime
  id: RequestTime
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: RequestTime
  nameWithType: Game.RequestTime
  fullName: ZMDFQ.Game.RequestTime
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: RequestTime
    path: Assets/Scripts/Core/Game.cs
    startLine: 69
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n其他询问可用时间\n"
  example: []
  syntax:
    content: public float RequestTime
    return:
      type: System.Single
    content.vb: Public RequestTime As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.OnRequest
  commentId: F:ZMDFQ.Game.OnRequest
  id: OnRequest
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: OnRequest
  nameWithType: Game.OnRequest
  fullName: ZMDFQ.Game.OnRequest
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: OnRequest
    path: Assets/Scripts/Core/Game.cs
    startLine: 71
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public Action<Game, Request> OnRequest
    return:
      type: System.Action{ZMDFQ.Game,ZMDFQ.PlayerAction.Request}
    content.vb: Public OnRequest As Action(Of Game, Request)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.Init(ZMDFQ.GameOptions)
  commentId: M:ZMDFQ.Game.Init(ZMDFQ.GameOptions)
  id: Init(ZMDFQ.GameOptions)
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: Init(GameOptions)
  nameWithType: Game.Init(GameOptions)
  fullName: ZMDFQ.Game.Init(ZMDFQ.GameOptions)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Init
    path: Assets/Scripts/Core/Game.cs
    startLine: 86
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n游戏初始化，卡组玩家生成\n"
  example: []
  syntax:
    content: public void Init(GameOptions options = null)
    parameters:
    - id: options
      type: ZMDFQ.GameOptions
    content.vb: Public Sub Init(options As GameOptions = Nothing)
  overload: ZMDFQ.Game.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.StartGame
  commentId: M:ZMDFQ.Game.StartGame
  id: StartGame
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: StartGame()
  nameWithType: Game.StartGame()
  fullName: ZMDFQ.Game.StartGame()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: StartGame
    path: Assets/Scripts/Core/Game.cs
    startLine: 161
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n开始游戏流程\n"
  example: []
  syntax:
    content: public void StartGame()
    content.vb: Public Sub StartGame
  overload: ZMDFQ.Game.StartGame*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.createCards``1(``0,System.Int32,System.Int32)
  commentId: M:ZMDFQ.Game.createCards``1(``0,System.Int32,System.Int32)
  id: createCards``1(``0,System.Int32,System.Int32)
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: createCards<T>(T, Int32, Int32)
  nameWithType: Game.createCards<T>(T, Int32, Int32)
  fullName: ZMDFQ.Game.createCards<T>(T, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: createCards
    path: Assets/Scripts/Core/Game.cs
    startLine: 221
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n创建卡牌\n"
  example: []
  syntax:
    content: >-
      public T[] createCards<T>(T origin, int number, int startID = -1)
          where T : Card, new()
    parameters:
    - id: origin
      type: '{T}'
      description: 数组中的所有卡牌都会以这张牌作为原型
    - id: number
      type: System.Int32
      description: 要创建多少张卡牌
    - id: startID
      type: System.Int32
      description: 如果不填这个参数那么会自动给卡牌分配ID，如果填了那么被创建的卡牌会从startID开始分配参数，每张卡在前一张的基础上+1
    typeParameters:
    - id: T
      description: 卡牌类型
    return:
      type: '{T}[]'
      description: 创建好的卡牌
    content.vb: Public Function createCards(Of T As {Card, New})(origin As T, number As Integer, startID As Integer = -1) As T()
  overload: ZMDFQ.Game.createCards*
  nameWithType.vb: Game.createCards(Of T)(T, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ZMDFQ.Game.createCards(Of T)(T, System.Int32, System.Int32)
  name.vb: createCards(Of T)(T, Int32, Int32)
- uid: ZMDFQ.Game.Answer(ZMDFQ.PlayerAction.Response)
  commentId: M:ZMDFQ.Game.Answer(ZMDFQ.PlayerAction.Response)
  id: Answer(ZMDFQ.PlayerAction.Response)
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: Answer(Response)
  nameWithType: Game.Answer(Response)
  fullName: ZMDFQ.Game.Answer(ZMDFQ.PlayerAction.Response)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Answer
    path: Assets/Scripts/Core/Game.cs
    startLine: 236
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n玩家响应系统询问用这个接口\n"
  example: []
  syntax:
    content: public void Answer(Response response)
    parameters:
    - id: response
      type: ZMDFQ.PlayerAction.Response
      description: ''
    content.vb: Public Sub Answer(response As Response)
  overload: ZMDFQ.Game.Answer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.WaitAnswer(ZMDFQ.PlayerAction.Request)
  commentId: M:ZMDFQ.Game.WaitAnswer(ZMDFQ.PlayerAction.Request)
  id: WaitAnswer(ZMDFQ.PlayerAction.Request)
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: WaitAnswer(Request)
  nameWithType: Game.WaitAnswer(Request)
  fullName: ZMDFQ.Game.WaitAnswer(ZMDFQ.PlayerAction.Request)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: WaitAnswer
    path: Assets/Scripts/Core/Game.cs
    startLine: 249
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n向玩家请求一个动作的回应\n"
  example: []
  syntax:
    content: public Task<Response> WaitAnswer(Request request)
    parameters:
    - id: request
      type: ZMDFQ.PlayerAction.Request
      description: ''
    return:
      type: System.Threading.Tasks.Task{ZMDFQ.PlayerAction.Response}
      description: ''
    content.vb: Public Function WaitAnswer(request As Request) As Task(Of Response)
  overload: ZMDFQ.Game.WaitAnswer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Game.winners
  commentId: P:ZMDFQ.Game.winners
  id: winners
  parent: ZMDFQ.Game
  langs:
  - csharp
  - vb
  name: winners
  nameWithType: Game.winners
  fullName: ZMDFQ.Game.winners
  type: Property
  source:
    remote:
      path: Assets/Scripts/Core/Game.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: winners
    path: Assets/Scripts/Core/Game.cs
    startLine: 321
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public Player[] winners { get; }
    parameters: []
    return:
      type: ZMDFQ.Player[]
    content.vb: Public ReadOnly Property winners As Player()
  overload: ZMDFQ.Game.winners*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: ZMDFQ
  commentId: N:ZMDFQ
  name: ZMDFQ
  nameWithType: ZMDFQ
  fullName: ZMDFQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ZMDFQ.EventSystem
  commentId: T:ZMDFQ.EventSystem
  parent: ZMDFQ
  name: EventSystem
  nameWithType: EventSystem
  fullName: ZMDFQ.EventSystem
- uid: ZMDFQ.ITimeManager
  commentId: T:ZMDFQ.ITimeManager
  parent: ZMDFQ
  name: ITimeManager
  nameWithType: ITimeManager
  fullName: ZMDFQ.ITimeManager
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{ZMDFQ.Player}
  commentId: T:System.Collections.Generic.List{ZMDFQ.Player}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Player>
  nameWithType: List<Player>
  fullName: System.Collections.Generic.List<ZMDFQ.Player>
  nameWithType.vb: List(Of Player)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.Player)
  name.vb: List(Of Player)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.Player
    name: Player
    nameWithType: Player
    fullName: ZMDFQ.Player
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.Player
    name: Player
    nameWithType: Player
    fullName: ZMDFQ.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{ZMDFQ.Card}
  commentId: T:System.Collections.Generic.List{ZMDFQ.Card}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Card>
  nameWithType: List<Card>
  fullName: System.Collections.Generic.List<ZMDFQ.Card>
  nameWithType.vb: List(Of Card)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.Card)
  name.vb: List(Of Card)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.Card
    name: Card
    nameWithType: Card
    fullName: ZMDFQ.Card
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.Card
    name: Card
    nameWithType: Card
    fullName: ZMDFQ.Card
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{ZMDFQ.UsingInfo}
  commentId: T:System.Collections.Generic.List{ZMDFQ.UsingInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UsingInfo>
  nameWithType: List<UsingInfo>
  fullName: System.Collections.Generic.List<ZMDFQ.UsingInfo>
  nameWithType.vb: List(Of UsingInfo)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.UsingInfo)
  name.vb: List(Of UsingInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.UsingInfo
    name: UsingInfo
    nameWithType: UsingInfo
    fullName: ZMDFQ.UsingInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.UsingInfo
    name: UsingInfo
    nameWithType: UsingInfo
    fullName: ZMDFQ.UsingInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{ZMDFQ.ActionCard}
  commentId: T:System.Collections.Generic.List{ZMDFQ.ActionCard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ActionCard>
  nameWithType: List<ActionCard>
  fullName: System.Collections.Generic.List<ZMDFQ.ActionCard>
  nameWithType.vb: List(Of ActionCard)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.ActionCard)
  name.vb: List(Of ActionCard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.ActionCard
    name: ActionCard
    nameWithType: ActionCard
    fullName: ZMDFQ.ActionCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.ActionCard
    name: ActionCard
    nameWithType: ActionCard
    fullName: ZMDFQ.ActionCard
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{ZMDFQ.ThemeCard}
  commentId: T:System.Collections.Generic.List{ZMDFQ.ThemeCard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ThemeCard>
  nameWithType: List<ThemeCard>
  fullName: System.Collections.Generic.List<ZMDFQ.ThemeCard>
  nameWithType.vb: List(Of ThemeCard)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.ThemeCard)
  name.vb: List(Of ThemeCard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.ThemeCard
    name: ThemeCard
    nameWithType: ThemeCard
    fullName: ZMDFQ.ThemeCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.ThemeCard
    name: ThemeCard
    nameWithType: ThemeCard
    fullName: ZMDFQ.ThemeCard
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{ZMDFQ.EventCard}
  commentId: T:System.Collections.Generic.List{ZMDFQ.EventCard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EventCard>
  nameWithType: List<EventCard>
  fullName: System.Collections.Generic.List<ZMDFQ.EventCard>
  nameWithType.vb: List(Of EventCard)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.EventCard)
  name.vb: List(Of EventCard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.EventCard
    name: EventCard
    nameWithType: EventCard
    fullName: ZMDFQ.EventCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.EventCard
    name: EventCard
    nameWithType: EventCard
    fullName: ZMDFQ.EventCard
  - name: )
    nameWithType: )
    fullName: )
- uid: ZMDFQ.ThemeCard
  commentId: T:ZMDFQ.ThemeCard
  parent: ZMDFQ
  name: ThemeCard
  nameWithType: ThemeCard
  fullName: ZMDFQ.ThemeCard
- uid: ZMDFQ.Player
  commentId: T:ZMDFQ.Player
  parent: ZMDFQ
  name: Player
  nameWithType: Player
  fullName: ZMDFQ.Player
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Action{ZMDFQ.Game,ZMDFQ.PlayerAction.Request}
  commentId: T:System.Action{ZMDFQ.Game,ZMDFQ.PlayerAction.Request}
  parent: System
  definition: System.Action`2
  name: Action<Game, Request>
  nameWithType: Action<Game, Request>
  fullName: System.Action<ZMDFQ.Game, ZMDFQ.PlayerAction.Request>
  nameWithType.vb: Action(Of Game, Request)
  fullName.vb: System.Action(Of ZMDFQ.Game, ZMDFQ.PlayerAction.Request)
  name.vb: Action(Of Game, Request)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.Game
    name: Game
    nameWithType: Game
    fullName: ZMDFQ.Game
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ZMDFQ.PlayerAction.Request
    name: Request
    nameWithType: Request
    fullName: ZMDFQ.PlayerAction.Request
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.Game
    name: Game
    nameWithType: Game
    fullName: ZMDFQ.Game
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ZMDFQ.PlayerAction.Request
    name: Request
    nameWithType: Request
    fullName: ZMDFQ.PlayerAction.Request
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: ZMDFQ.Game.Init*
  commentId: Overload:ZMDFQ.Game.Init
  name: Init
  nameWithType: Game.Init
  fullName: ZMDFQ.Game.Init
- uid: ZMDFQ.GameOptions
  commentId: T:ZMDFQ.GameOptions
  parent: ZMDFQ
  name: GameOptions
  nameWithType: GameOptions
  fullName: ZMDFQ.GameOptions
- uid: ZMDFQ.Game.StartGame*
  commentId: Overload:ZMDFQ.Game.StartGame
  name: StartGame
  nameWithType: Game.StartGame
  fullName: ZMDFQ.Game.StartGame
- uid: ZMDFQ.Game.createCards*
  commentId: Overload:ZMDFQ.Game.createCards
  name: createCards
  nameWithType: Game.createCards
  fullName: ZMDFQ.Game.createCards
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ZMDFQ.Game.Answer*
  commentId: Overload:ZMDFQ.Game.Answer
  name: Answer
  nameWithType: Game.Answer
  fullName: ZMDFQ.Game.Answer
- uid: ZMDFQ.PlayerAction.Response
  commentId: T:ZMDFQ.PlayerAction.Response
  parent: ZMDFQ.PlayerAction
  name: Response
  nameWithType: Response
  fullName: ZMDFQ.PlayerAction.Response
- uid: ZMDFQ.PlayerAction
  commentId: N:ZMDFQ.PlayerAction
  name: ZMDFQ.PlayerAction
  nameWithType: ZMDFQ.PlayerAction
  fullName: ZMDFQ.PlayerAction
- uid: ZMDFQ.Game.WaitAnswer*
  commentId: Overload:ZMDFQ.Game.WaitAnswer
  name: WaitAnswer
  nameWithType: Game.WaitAnswer
  fullName: ZMDFQ.Game.WaitAnswer
- uid: ZMDFQ.PlayerAction.Request
  commentId: T:ZMDFQ.PlayerAction.Request
  parent: ZMDFQ.PlayerAction
  name: Request
  nameWithType: Request
  fullName: ZMDFQ.PlayerAction.Request
- uid: System.Threading.Tasks.Task{ZMDFQ.PlayerAction.Response}
  commentId: T:System.Threading.Tasks.Task{ZMDFQ.PlayerAction.Response}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Response>
  nameWithType: Task<Response>
  fullName: System.Threading.Tasks.Task<ZMDFQ.PlayerAction.Response>
  nameWithType.vb: Task(Of Response)
  fullName.vb: System.Threading.Tasks.Task(Of ZMDFQ.PlayerAction.Response)
  name.vb: Task(Of Response)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.PlayerAction.Response
    name: Response
    nameWithType: Response
    fullName: ZMDFQ.PlayerAction.Response
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.PlayerAction.Response
    name: Response
    nameWithType: Response
    fullName: ZMDFQ.PlayerAction.Response
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: ZMDFQ.Game.winners*
  commentId: Overload:ZMDFQ.Game.winners
  name: winners
  nameWithType: Game.winners
  fullName: ZMDFQ.Game.winners
- uid: ZMDFQ.Player[]
  isExternal: true
  name: Player[]
  nameWithType: Player[]
  fullName: ZMDFQ.Player[]
  nameWithType.vb: Player()
  fullName.vb: ZMDFQ.Player()
  name.vb: Player()
  spec.csharp:
  - uid: ZMDFQ.Player
    name: Player
    nameWithType: Player
    fullName: ZMDFQ.Player
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: ZMDFQ.Player
    name: Player
    nameWithType: Player
    fullName: ZMDFQ.Player
  - name: ()
    nameWithType: ()
    fullName: ()
