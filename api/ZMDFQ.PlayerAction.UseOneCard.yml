### YamlMime:ManagedReference
items:
- uid: ZMDFQ.PlayerAction.UseOneCard
  commentId: T:ZMDFQ.PlayerAction.UseOneCard
  id: UseOneCard
  parent: ZMDFQ.PlayerAction
  children:
  - ZMDFQ.PlayerAction.UseOneCard.CardId
  - ZMDFQ.PlayerAction.UseOneCard.Source
  - ZMDFQ.PlayerAction.UseOneCard.TreatAs
  langs:
  - csharp
  - vb
  name: UseOneCard
  nameWithType: UseOneCard
  fullName: ZMDFQ.PlayerAction.UseOneCard
  type: Class
  source:
    remote:
      path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: UseOneCard
    path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
    startLine: 11
  assemblies:
  - Model
  namespace: ZMDFQ.PlayerAction
  summary: "\n使用一张牌，这张牌能由其他卡转换过来\n"
  example: []
  syntax:
    content: 'public abstract class UseOneCard : UseInfo'
    content.vb: >-
      Public MustInherit Class UseOneCard
          Inherits UseInfo
  inheritance:
  - System.Object
  - ZMDFQ.PlayerAction.Response
  - ZMDFQ.PlayerAction.UseInfo
  derivedClasses:
  - ZMDFQ.PlayerAction.ChooseDirectionResponse
  - ZMDFQ.PlayerAction.ChooseSomeoneResponse
  - ZMDFQ.PlayerAction.SimpleResponse
  inheritedMembers:
  - ZMDFQ.PlayerAction.UseInfo.HandleAction(ZMDFQ.Game)
  - ZMDFQ.PlayerAction.Response.PlayerId
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: ZMDFQ.PlayerAction.UseOneCard.CardId
  commentId: F:ZMDFQ.PlayerAction.UseOneCard.CardId
  id: CardId
  parent: ZMDFQ.PlayerAction.UseOneCard
  langs:
  - csharp
  - vb
  name: CardId
  nameWithType: UseOneCard.CardId
  fullName: ZMDFQ.PlayerAction.UseOneCard.CardId
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: CardId
    path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
    startLine: 13
  assemblies:
  - Model
  namespace: ZMDFQ.PlayerAction
  syntax:
    content: public int CardId
    return:
      type: System.Int32
    content.vb: Public CardId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.PlayerAction.UseOneCard.Source
  commentId: F:ZMDFQ.PlayerAction.UseOneCard.Source
  id: Source
  parent: ZMDFQ.PlayerAction.UseOneCard
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: UseOneCard.Source
  fullName: ZMDFQ.PlayerAction.UseOneCard.Source
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Source
    path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
    startLine: 15
  assemblies:
  - Model
  namespace: ZMDFQ.PlayerAction
  syntax:
    content: public List<int> Source
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Source As List(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.PlayerAction.UseOneCard.TreatAs
  commentId: F:ZMDFQ.PlayerAction.UseOneCard.TreatAs
  id: TreatAs
  parent: ZMDFQ.PlayerAction.UseOneCard
  langs:
  - csharp
  - vb
  name: TreatAs
  nameWithType: UseOneCard.TreatAs
  fullName: ZMDFQ.PlayerAction.UseOneCard.TreatAs
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: TreatAs
    path: Assets/Scripts/Core/PlayerAction/UseWay/UseOneCard.cs
    startLine: 17
  assemblies:
  - Model
  namespace: ZMDFQ.PlayerAction
  syntax:
    content: public int TreatAs
    return:
      type: System.Int32
    content.vb: Public TreatAs As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ZMDFQ.PlayerAction
  commentId: N:ZMDFQ.PlayerAction
  name: ZMDFQ.PlayerAction
  nameWithType: ZMDFQ.PlayerAction
  fullName: ZMDFQ.PlayerAction
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ZMDFQ.PlayerAction.Response
  commentId: T:ZMDFQ.PlayerAction.Response
  parent: ZMDFQ.PlayerAction
  name: Response
  nameWithType: Response
  fullName: ZMDFQ.PlayerAction.Response
- uid: ZMDFQ.PlayerAction.UseInfo
  commentId: T:ZMDFQ.PlayerAction.UseInfo
  parent: ZMDFQ.PlayerAction
  name: UseInfo
  nameWithType: UseInfo
  fullName: ZMDFQ.PlayerAction.UseInfo
- uid: ZMDFQ.PlayerAction.UseInfo.HandleAction(ZMDFQ.Game)
  commentId: M:ZMDFQ.PlayerAction.UseInfo.HandleAction(ZMDFQ.Game)
  parent: ZMDFQ.PlayerAction.UseInfo
  name: HandleAction(Game)
  nameWithType: UseInfo.HandleAction(Game)
  fullName: ZMDFQ.PlayerAction.UseInfo.HandleAction(ZMDFQ.Game)
  spec.csharp:
  - uid: ZMDFQ.PlayerAction.UseInfo.HandleAction(ZMDFQ.Game)
    name: HandleAction
    nameWithType: UseInfo.HandleAction
    fullName: ZMDFQ.PlayerAction.UseInfo.HandleAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: ZMDFQ.Game
    name: Game
    nameWithType: Game
    fullName: ZMDFQ.Game
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ZMDFQ.PlayerAction.UseInfo.HandleAction(ZMDFQ.Game)
    name: HandleAction
    nameWithType: UseInfo.HandleAction
    fullName: ZMDFQ.PlayerAction.UseInfo.HandleAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: ZMDFQ.Game
    name: Game
    nameWithType: Game
    fullName: ZMDFQ.Game
  - name: )
    nameWithType: )
    fullName: )
- uid: ZMDFQ.PlayerAction.Response.PlayerId
  commentId: F:ZMDFQ.PlayerAction.Response.PlayerId
  parent: ZMDFQ.PlayerAction.Response
  name: PlayerId
  nameWithType: Response.PlayerId
  fullName: ZMDFQ.PlayerAction.Response.PlayerId
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
