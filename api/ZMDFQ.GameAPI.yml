### YamlMime:ManagedReference
items:
- uid: ZMDFQ.GameAPI
  commentId: T:ZMDFQ.GameAPI
  id: GameAPI
  parent: ZMDFQ
  children:
  - ZMDFQ.GameAPI.#ctor(ZMDFQ.Game,ZMDFQ.PlayerAction.Response)
  - ZMDFQ.GameAPI.addPlayerInfluence(ZMDFQ.Player,System.Int32)
  - ZMDFQ.GameAPI.triggerPlayer
  langs:
  - csharp
  - vb
  name: GameAPI
  nameWithType: GameAPI
  fullName: ZMDFQ.GameAPI
  type: Class
  source:
    remote:
      path: Assets/Scripts/Scripting/GameAPI.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: GameAPI
    path: Assets/Scripts/Scripting/GameAPI.cs
    startLine: 8
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n游戏脚本API，用于为脚本语言提供API\n"
  example: []
  syntax:
    content: public class GameAPI
    content.vb: Public Class GameAPI
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ZMDFQ.GameAPI.triggerPlayer
  commentId: P:ZMDFQ.GameAPI.triggerPlayer
  id: triggerPlayer
  parent: ZMDFQ.GameAPI
  langs:
  - csharp
  - vb
  name: triggerPlayer
  nameWithType: GameAPI.triggerPlayer
  fullName: ZMDFQ.GameAPI.triggerPlayer
  type: Property
  source:
    remote:
      path: Assets/Scripts/Scripting/GameAPI.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: triggerPlayer
    path: Assets/Scripts/Scripting/GameAPI.cs
    startLine: 15
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n触发事件玩家\n"
  example: []
  syntax:
    content: public Player triggerPlayer { get; }
    parameters: []
    return:
      type: ZMDFQ.Player
    content.vb: Public ReadOnly Property triggerPlayer As Player
  overload: ZMDFQ.GameAPI.triggerPlayer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ZMDFQ.GameAPI.#ctor(ZMDFQ.Game,ZMDFQ.PlayerAction.Response)
  commentId: M:ZMDFQ.GameAPI.#ctor(ZMDFQ.Game,ZMDFQ.PlayerAction.Response)
  id: '#ctor(ZMDFQ.Game,ZMDFQ.PlayerAction.Response)'
  parent: ZMDFQ.GameAPI
  langs:
  - csharp
  - vb
  name: GameAPI(Game, Response)
  nameWithType: GameAPI.GameAPI(Game, Response)
  fullName: ZMDFQ.GameAPI.GameAPI(ZMDFQ.Game, ZMDFQ.PlayerAction.Response)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Scripting/GameAPI.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: .ctor
    path: Assets/Scripts/Scripting/GameAPI.cs
    startLine: 19
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public GameAPI(Game game, Response target)
    parameters:
    - id: game
      type: ZMDFQ.Game
    - id: target
      type: ZMDFQ.PlayerAction.Response
    content.vb: Public Sub New(game As Game, target As Response)
  overload: ZMDFQ.GameAPI.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.GameAPI.addPlayerInfluence(ZMDFQ.Player,System.Int32)
  commentId: M:ZMDFQ.GameAPI.addPlayerInfluence(ZMDFQ.Player,System.Int32)
  id: addPlayerInfluence(ZMDFQ.Player,System.Int32)
  parent: ZMDFQ.GameAPI
  langs:
  - csharp
  - vb
  name: addPlayerInfluence(Player, Int32)
  nameWithType: GameAPI.addPlayerInfluence(Player, Int32)
  fullName: ZMDFQ.GameAPI.addPlayerInfluence(ZMDFQ.Player, System.Int32)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Scripting/GameAPI.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: addPlayerInfluence
    path: Assets/Scripts/Scripting/GameAPI.cs
    startLine: 29
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n增加玩家影响力，当增加的值为负数的时候则会减少。\n"
  example: []
  syntax:
    content: public void addPlayerInfluence(Player player, int value)
    parameters:
    - id: player
      type: ZMDFQ.Player
      description: 增加影响力的玩家
    - id: value
      type: System.Int32
      description: 增加的值
    content.vb: Public Sub addPlayerInfluence(player As Player, value As Integer)
  overload: ZMDFQ.GameAPI.addPlayerInfluence*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ZMDFQ
  commentId: N:ZMDFQ
  name: ZMDFQ
  nameWithType: ZMDFQ
  fullName: ZMDFQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ZMDFQ.GameAPI.triggerPlayer*
  commentId: Overload:ZMDFQ.GameAPI.triggerPlayer
  name: triggerPlayer
  nameWithType: GameAPI.triggerPlayer
  fullName: ZMDFQ.GameAPI.triggerPlayer
- uid: ZMDFQ.Player
  commentId: T:ZMDFQ.Player
  parent: ZMDFQ
  name: Player
  nameWithType: Player
  fullName: ZMDFQ.Player
- uid: ZMDFQ.GameAPI.#ctor*
  commentId: Overload:ZMDFQ.GameAPI.#ctor
  name: GameAPI
  nameWithType: GameAPI.GameAPI
  fullName: ZMDFQ.GameAPI.GameAPI
- uid: ZMDFQ.Game
  commentId: T:ZMDFQ.Game
  parent: ZMDFQ
  name: Game
  nameWithType: Game
  fullName: ZMDFQ.Game
- uid: ZMDFQ.PlayerAction.Response
  commentId: T:ZMDFQ.PlayerAction.Response
  parent: ZMDFQ.PlayerAction
  name: Response
  nameWithType: Response
  fullName: ZMDFQ.PlayerAction.Response
- uid: ZMDFQ.PlayerAction
  commentId: N:ZMDFQ.PlayerAction
  name: ZMDFQ.PlayerAction
  nameWithType: ZMDFQ.PlayerAction
  fullName: ZMDFQ.PlayerAction
- uid: ZMDFQ.GameAPI.addPlayerInfluence*
  commentId: Overload:ZMDFQ.GameAPI.addPlayerInfluence
  name: addPlayerInfluence
  nameWithType: GameAPI.addPlayerInfluence
  fullName: ZMDFQ.GameAPI.addPlayerInfluence
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
