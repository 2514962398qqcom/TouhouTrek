### YamlMime:ManagedReference
items:
- uid: ZMDFQ.Skill
  commentId: T:ZMDFQ.Skill
  id: Skill
  parent: ZMDFQ
  children:
  - ZMDFQ.Skill.AutoRequest
  - ZMDFQ.Skill.Disable(ZMDFQ.Game)
  - ZMDFQ.Skill.DoEffect(ZMDFQ.Game,ZMDFQ.PlayerAction.UseInfo)
  - ZMDFQ.Skill.Enable(ZMDFQ.Game)
  - ZMDFQ.Skill.Name
  - ZMDFQ.Skill.useWay
  - ZMDFQ.Skill.UseWay
  langs:
  - csharp
  - vb
  name: Skill
  nameWithType: Skill
  fullName: ZMDFQ.Skill
  type: Class
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Skill
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 9
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public abstract class Skill
    content.vb: Public MustInherit Class Skill
  inheritance:
  - System.Object
  derivedClasses:
  - ZMDFQ.Cards.CR_CP001_SK1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: ZMDFQ.Skill.Name
  commentId: F:ZMDFQ.Skill.Name
  id: Name
  parent: ZMDFQ.Skill
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Skill.Name
  fullName: ZMDFQ.Skill.Name
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Name
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 11
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Skill.AutoRequest
  commentId: F:ZMDFQ.Skill.AutoRequest
  id: AutoRequest
  parent: ZMDFQ.Skill
  langs:
  - csharp
  - vb
  name: AutoRequest
  nameWithType: Skill.AutoRequest
  fullName: ZMDFQ.Skill.AutoRequest
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: AutoRequest
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 15
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n未翻开时 是否询问响应技能\n"
  example: []
  syntax:
    content: public bool AutoRequest
    return:
      type: System.Boolean
    content.vb: Public AutoRequest As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Skill.UseWay
  commentId: P:ZMDFQ.Skill.UseWay
  id: UseWay
  parent: ZMDFQ.Skill
  langs:
  - csharp
  - vb
  name: UseWay
  nameWithType: Skill.UseWay
  fullName: ZMDFQ.Skill.UseWay
  type: Property
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: UseWay
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 20
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n主动使用时应输入的参数类型，不可主动使用则为空\n"
  example: []
  syntax:
    content: public UseWay UseWay { get; }
    parameters: []
    return:
      type: ZMDFQ.PlayerAction.UseWay
    content.vb: Public ReadOnly Property UseWay As UseWay
  overload: ZMDFQ.Skill.UseWay*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ZMDFQ.Skill.useWay
  commentId: M:ZMDFQ.Skill.useWay
  id: useWay
  parent: ZMDFQ.Skill
  langs:
  - csharp
  - vb
  name: useWay()
  nameWithType: Skill.useWay()
  fullName: ZMDFQ.Skill.useWay()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: useWay
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 22
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: protected abstract UseWay useWay()
    return:
      type: ZMDFQ.PlayerAction.UseWay
    content.vb: Protected MustOverride Function useWay As UseWay
  overload: ZMDFQ.Skill.useWay*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: ZMDFQ.Skill.Enable(ZMDFQ.Game)
  commentId: M:ZMDFQ.Skill.Enable(ZMDFQ.Game)
  id: Enable(ZMDFQ.Game)
  parent: ZMDFQ.Skill
  langs:
  - csharp
  - vb
  name: Enable(Game)
  nameWithType: Skill.Enable(Game)
  fullName: ZMDFQ.Skill.Enable(ZMDFQ.Game)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Enable
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 26
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n选择角色牌后就生效\n"
  example: []
  syntax:
    content: public abstract void Enable(Game game)
    parameters:
    - id: game
      type: ZMDFQ.Game
    content.vb: Public MustOverride Sub Enable(game As Game)
  overload: ZMDFQ.Skill.Enable*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: ZMDFQ.Skill.Disable(ZMDFQ.Game)
  commentId: M:ZMDFQ.Skill.Disable(ZMDFQ.Game)
  id: Disable(ZMDFQ.Game)
  parent: ZMDFQ.Skill
  langs:
  - csharp
  - vb
  name: Disable(Game)
  nameWithType: Skill.Disable(Game)
  fullName: ZMDFQ.Skill.Disable(ZMDFQ.Game)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Disable
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 32
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n某些原因导致技能失效\n"
  example: []
  syntax:
    content: public abstract void Disable(Game game)
    parameters:
    - id: game
      type: ZMDFQ.Game
      description: ''
    content.vb: Public MustOverride Sub Disable(game As Game)
  overload: ZMDFQ.Skill.Disable*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: ZMDFQ.Skill.DoEffect(ZMDFQ.Game,ZMDFQ.PlayerAction.UseInfo)
  commentId: M:ZMDFQ.Skill.DoEffect(ZMDFQ.Game,ZMDFQ.PlayerAction.UseInfo)
  id: DoEffect(ZMDFQ.Game,ZMDFQ.PlayerAction.UseInfo)
  parent: ZMDFQ.Skill
  langs:
  - csharp
  - vb
  name: DoEffect(Game, UseInfo)
  nameWithType: Skill.DoEffect(Game, UseInfo)
  fullName: ZMDFQ.Skill.DoEffect(ZMDFQ.Game, ZMDFQ.PlayerAction.UseInfo)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Card/Skill.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: DoEffect
    path: Assets/Scripts/Core/Card/Skill.cs
    startLine: 40
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n主动使用时效果\n"
  example: []
  syntax:
    content: public abstract Task DoEffect(Game game, UseInfo useInfo)
    parameters:
    - id: game
      type: ZMDFQ.Game
      description: ''
    - id: useInfo
      type: ZMDFQ.PlayerAction.UseInfo
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public MustOverride Function DoEffect(game As Game, useInfo As UseInfo) As Task
  overload: ZMDFQ.Skill.DoEffect*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: ZMDFQ
  commentId: N:ZMDFQ
  name: ZMDFQ
  nameWithType: ZMDFQ
  fullName: ZMDFQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ZMDFQ.Skill.UseWay*
  commentId: Overload:ZMDFQ.Skill.UseWay
  name: UseWay
  nameWithType: Skill.UseWay
  fullName: ZMDFQ.Skill.UseWay
- uid: ZMDFQ.PlayerAction.UseWay
  commentId: T:ZMDFQ.PlayerAction.UseWay
  parent: ZMDFQ.PlayerAction
  name: UseWay
  nameWithType: UseWay
  fullName: ZMDFQ.PlayerAction.UseWay
- uid: ZMDFQ.PlayerAction
  commentId: N:ZMDFQ.PlayerAction
  name: ZMDFQ.PlayerAction
  nameWithType: ZMDFQ.PlayerAction
  fullName: ZMDFQ.PlayerAction
- uid: ZMDFQ.Skill.useWay*
  commentId: Overload:ZMDFQ.Skill.useWay
  name: useWay
  nameWithType: Skill.useWay
  fullName: ZMDFQ.Skill.useWay
- uid: ZMDFQ.Skill.Enable*
  commentId: Overload:ZMDFQ.Skill.Enable
  name: Enable
  nameWithType: Skill.Enable
  fullName: ZMDFQ.Skill.Enable
- uid: ZMDFQ.Game
  commentId: T:ZMDFQ.Game
  parent: ZMDFQ
  name: Game
  nameWithType: Game
  fullName: ZMDFQ.Game
- uid: ZMDFQ.Skill.Disable*
  commentId: Overload:ZMDFQ.Skill.Disable
  name: Disable
  nameWithType: Skill.Disable
  fullName: ZMDFQ.Skill.Disable
- uid: ZMDFQ.Skill.DoEffect*
  commentId: Overload:ZMDFQ.Skill.DoEffect
  name: DoEffect
  nameWithType: Skill.DoEffect
  fullName: ZMDFQ.Skill.DoEffect
- uid: ZMDFQ.PlayerAction.UseInfo
  commentId: T:ZMDFQ.PlayerAction.UseInfo
  parent: ZMDFQ.PlayerAction
  name: UseInfo
  nameWithType: UseInfo
  fullName: ZMDFQ.PlayerAction.UseInfo
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
