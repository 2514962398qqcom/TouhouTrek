### YamlMime:ManagedReference
items:
- uid: ZMDFQ.Player
  commentId: T:ZMDFQ.Player
  id: Player
  parent: ZMDFQ
  children:
  - ZMDFQ.Player.#ctor(System.Int32)
  - ZMDFQ.Player.ActionCards
  - ZMDFQ.Player.EventCards
  - ZMDFQ.Player.Hero
  - ZMDFQ.Player.Id
  - ZMDFQ.Player.point
  - ZMDFQ.Player.SaveEvent
  - ZMDFQ.Player.Size
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: ZMDFQ.Player
  type: Class
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Player
    path: Assets/Scripts/Core/Player.cs
    startLine: 7
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public class Player
    content.vb: Public Class Player
  inheritance:
  - System.Object
  derivedClasses:
  - ZMDFQ.AI
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ZMDFQ.Player.Id
  commentId: F:ZMDFQ.Player.Id
  id: Id
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Player.Id
  fullName: ZMDFQ.Player.Id
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Id
    path: Assets/Scripts/Core/Player.cs
    startLine: 9
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public int Id
    return:
      type: System.Int32
    content.vb: Public Id As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Player.Size
  commentId: F:ZMDFQ.Player.Size
  id: Size
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Player.Size
  fullName: ZMDFQ.Player.Size
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Size
    path: Assets/Scripts/Core/Player.cs
    startLine: 10
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public int Size
    return:
      type: System.Int32
    content.vb: Public Size As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Player.ActionCards
  commentId: F:ZMDFQ.Player.ActionCards
  id: ActionCards
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: ActionCards
  nameWithType: Player.ActionCards
  fullName: ZMDFQ.Player.ActionCards
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: ActionCards
    path: Assets/Scripts/Core/Player.cs
    startLine: 14
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n手牌\n"
  example: []
  syntax:
    content: public List<ActionCard> ActionCards
    return:
      type: System.Collections.Generic.List{ZMDFQ.ActionCard}
    content.vb: Public ActionCards As List(Of ActionCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Player.EventCards
  commentId: F:ZMDFQ.Player.EventCards
  id: EventCards
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: EventCards
  nameWithType: Player.EventCards
  fullName: ZMDFQ.Player.EventCards
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: EventCards
    path: Assets/Scripts/Core/Player.cs
    startLine: 19
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n玩家手上的事件牌\n"
  example: []
  syntax:
    content: public List<EventCard> EventCards
    return:
      type: System.Collections.Generic.List{ZMDFQ.EventCard}
    content.vb: Public EventCards As List(Of EventCard)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Player.SaveEvent
  commentId: F:ZMDFQ.Player.SaveEvent
  id: SaveEvent
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: SaveEvent
  nameWithType: Player.SaveEvent
  fullName: ZMDFQ.Player.SaveEvent
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: SaveEvent
    path: Assets/Scripts/Core/Player.cs
    startLine: 24
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n被玩家扣住的事件\n"
  example: []
  syntax:
    content: public EventCard SaveEvent
    return:
      type: ZMDFQ.EventCard
    content.vb: Public SaveEvent As EventCard
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Player.Hero
  commentId: F:ZMDFQ.Player.Hero
  id: Hero
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: Hero
  nameWithType: Player.Hero
  fullName: ZMDFQ.Player.Hero
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Hero
    path: Assets/Scripts/Core/Player.cs
    startLine: 26
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public HeroCard Hero
    return:
      type: ZMDFQ.HeroCard
    content.vb: Public Hero As HeroCard
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Player.point
  commentId: P:ZMDFQ.Player.point
  id: point
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: point
  nameWithType: Player.point
  fullName: ZMDFQ.Player.point
  type: Property
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: point
    path: Assets/Scripts/Core/Player.cs
    startLine: 30
  assemblies:
  - Model
  namespace: ZMDFQ
  summary: "\n得分\n"
  example: []
  syntax:
    content: public int point { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property point As Integer
  overload: ZMDFQ.Player.point*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ZMDFQ.Player.#ctor(System.Int32)
  commentId: M:ZMDFQ.Player.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: ZMDFQ.Player
  langs:
  - csharp
  - vb
  name: Player(Int32)
  nameWithType: Player.Player(Int32)
  fullName: ZMDFQ.Player.Player(System.Int32)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Core/Player.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: .ctor
    path: Assets/Scripts/Core/Player.cs
    startLine: 31
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public Player(int id)
    parameters:
    - id: id
      type: System.Int32
    content.vb: Public Sub New(id As Integer)
  overload: ZMDFQ.Player.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ZMDFQ
  commentId: N:ZMDFQ
  name: ZMDFQ
  nameWithType: ZMDFQ
  fullName: ZMDFQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{ZMDFQ.ActionCard}
  commentId: T:System.Collections.Generic.List{ZMDFQ.ActionCard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ActionCard>
  nameWithType: List<ActionCard>
  fullName: System.Collections.Generic.List<ZMDFQ.ActionCard>
  nameWithType.vb: List(Of ActionCard)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.ActionCard)
  name.vb: List(Of ActionCard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.ActionCard
    name: ActionCard
    nameWithType: ActionCard
    fullName: ZMDFQ.ActionCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.ActionCard
    name: ActionCard
    nameWithType: ActionCard
    fullName: ZMDFQ.ActionCard
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{ZMDFQ.EventCard}
  commentId: T:System.Collections.Generic.List{ZMDFQ.EventCard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EventCard>
  nameWithType: List<EventCard>
  fullName: System.Collections.Generic.List<ZMDFQ.EventCard>
  nameWithType.vb: List(Of EventCard)
  fullName.vb: System.Collections.Generic.List(Of ZMDFQ.EventCard)
  name.vb: List(Of EventCard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ZMDFQ.EventCard
    name: EventCard
    nameWithType: EventCard
    fullName: ZMDFQ.EventCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ZMDFQ.EventCard
    name: EventCard
    nameWithType: EventCard
    fullName: ZMDFQ.EventCard
  - name: )
    nameWithType: )
    fullName: )
- uid: ZMDFQ.EventCard
  commentId: T:ZMDFQ.EventCard
  parent: ZMDFQ
  name: EventCard
  nameWithType: EventCard
  fullName: ZMDFQ.EventCard
- uid: ZMDFQ.HeroCard
  commentId: T:ZMDFQ.HeroCard
  parent: ZMDFQ
  name: HeroCard
  nameWithType: HeroCard
  fullName: ZMDFQ.HeroCard
- uid: ZMDFQ.Player.point*
  commentId: Overload:ZMDFQ.Player.point
  name: point
  nameWithType: Player.point
  fullName: ZMDFQ.Player.point
- uid: ZMDFQ.Player.#ctor*
  commentId: Overload:ZMDFQ.Player.#ctor
  name: Player
  nameWithType: Player.Player
  fullName: ZMDFQ.Player.Player
