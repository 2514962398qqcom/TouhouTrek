### YamlMime:ManagedReference
items:
- uid: ZMDFQ.Card
  commentId: T:ZMDFQ.Card
  id: Card
  parent: ZMDFQ
  children:
  - ZMDFQ.Card.CardType
  - ZMDFQ.Card.copyCard``1(``0)
  - ZMDFQ.Card.copyPropTo(ZMDFQ.Card)
  - ZMDFQ.Card.Id
  - ZMDFQ.Card.Name
  langs:
  - csharp
  - vb
  name: Card
  nameWithType: Card
  fullName: ZMDFQ.Card
  type: Class
  source:
    remote:
      path: Assets/Scripts/Core/Card/Card.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Card
    path: Assets/Scripts/Core/Card/Card.cs
    startLine: 8
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public abstract class Card
    content.vb: Public MustInherit Class Card
  inheritance:
  - System.Object
  derivedClasses:
  - ZMDFQ.ActionCard
  - ZMDFQ.EventCard
  - ZMDFQ.HeroCard
  - ZMDFQ.ThemeCard
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: ZMDFQ.Card.Id
  commentId: F:ZMDFQ.Card.Id
  id: Id
  parent: ZMDFQ.Card
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Card.Id
  fullName: ZMDFQ.Card.Id
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Card/Card.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Id
    path: Assets/Scripts/Core/Card/Card.cs
    startLine: 10
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public int Id
    return:
      type: System.Int32
    content.vb: Public Id As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Card.Name
  commentId: F:ZMDFQ.Card.Name
  id: Name
  parent: ZMDFQ.Card
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Card.Name
  fullName: ZMDFQ.Card.Name
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Card/Card.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: Name
    path: Assets/Scripts/Core/Card/Card.cs
    startLine: 11
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Card.CardType
  commentId: F:ZMDFQ.Card.CardType
  id: CardType
  parent: ZMDFQ.Card
  langs:
  - csharp
  - vb
  name: CardType
  nameWithType: Card.CardType
  fullName: ZMDFQ.Card.CardType
  type: Field
  source:
    remote:
      path: Assets/Scripts/Core/Card/Card.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: CardType
    path: Assets/Scripts/Core/Card/Card.cs
    startLine: 12
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: public CardTypeEnum CardType
    return:
      type: ZMDFQ.CardTypeEnum
    content.vb: Public CardType As CardTypeEnum
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ZMDFQ.Card.copyCard``1(``0)
  commentId: M:ZMDFQ.Card.copyCard``1(``0)
  id: copyCard``1(``0)
  parent: ZMDFQ.Card
  langs:
  - csharp
  - vb
  name: copyCard<T>(T)
  nameWithType: Card.copyCard<T>(T)
  fullName: ZMDFQ.Card.copyCard<T>(T)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Card/Card.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: copyCard
    path: Assets/Scripts/Core/Card/Card.cs
    startLine: 17
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: >-
      public static T copyCard<T>(T origin)
          where T : Card, new()
    parameters:
    - id: origin
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function copyCard(Of T As {Card, New})(origin As T) As T
  overload: ZMDFQ.Card.copyCard*
  nameWithType.vb: Card.copyCard(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: ZMDFQ.Card.copyCard(Of T)(T)
  name.vb: copyCard(Of T)(T)
- uid: ZMDFQ.Card.copyPropTo(ZMDFQ.Card)
  commentId: M:ZMDFQ.Card.copyPropTo(ZMDFQ.Card)
  id: copyPropTo(ZMDFQ.Card)
  parent: ZMDFQ.Card
  langs:
  - csharp
  - vb
  name: copyPropTo(Card)
  nameWithType: Card.copyPropTo(Card)
  fullName: ZMDFQ.Card.copyPropTo(ZMDFQ.Card)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Core/Card/Card.cs
      branch: develop
      repo: https://github.com/a395338563/ZMDFQ.git
    id: copyPropTo
    path: Assets/Scripts/Core/Card/Card.cs
    startLine: 23
  assemblies:
  - Model
  namespace: ZMDFQ
  syntax:
    content: protected virtual void copyPropTo(Card target)
    parameters:
    - id: target
      type: ZMDFQ.Card
    content.vb: Protected Overridable Sub copyPropTo(target As Card)
  overload: ZMDFQ.Card.copyPropTo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: ZMDFQ
  commentId: N:ZMDFQ
  name: ZMDFQ
  nameWithType: ZMDFQ
  fullName: ZMDFQ
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ZMDFQ.CardTypeEnum
  commentId: T:ZMDFQ.CardTypeEnum
  parent: ZMDFQ
  name: CardTypeEnum
  nameWithType: CardTypeEnum
  fullName: ZMDFQ.CardTypeEnum
- uid: ZMDFQ.Card.copyCard*
  commentId: Overload:ZMDFQ.Card.copyCard
  name: copyCard
  nameWithType: Card.copyCard
  fullName: ZMDFQ.Card.copyCard
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ZMDFQ.Card.copyPropTo*
  commentId: Overload:ZMDFQ.Card.copyPropTo
  name: copyPropTo
  nameWithType: Card.copyPropTo
  fullName: ZMDFQ.Card.copyPropTo
- uid: ZMDFQ.Card
  commentId: T:ZMDFQ.Card
  parent: ZMDFQ
  name: Card
  nameWithType: Card
  fullName: ZMDFQ.Card
